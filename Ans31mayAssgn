def twoSum(nums, target):
    num_indices = {}
    
   
    for i, num in enumerate(nums):
        complement = target - num
        if complement in num_indices:
            return [num_indices[complement], i]
        num_indices[num] = i
    return []
=======================================================================
def removeElement(nums, val):
    k = 0  
    n = len(nums)
    
    for i in range(n):
        if nums[i] != val:
            nums[k] = nums[i]
            k += 1
    
    return k
=======================================================================
def searchInsert(nums, target):
    left = 0
    right = len(nums) - 1
    
    while left <= right:
        mid = left + (right - left) // 2
        
        if nums[mid] == target:
            return mid
        
        if nums[mid] < target:
            left = mid + 1
        else:
            right = mid - 1
    
    return left
=====================================================================
def plusOne(digits):
    n = len(digits)
    for i in range(n-1, -1, -1):
        if digits[i] < 9:
            digits[i] += 1
            return digits
        else:
            digits[i] = 0
     return [1] + digits
 =========================================================================
 def merge(nums1, m, nums2, n):
    p1 = m - 1
    p2 = n - 1
    p = m + n - 1
    while p1 >= 0 and p2 >= 0:
        if nums1[p1] >= nums2[p2]:
            nums1[p] = nums1[p1]
            p1 -= 1
        else:
            nums1[p] = nums2[p2]
            p2 -= 1
        p -= 1
    nums1[:p2 + 1] = nums2[:p2 + 1]
===============================================================================
def containsDuplicate(nums):
    num_set = set()
    
    for num in nums:
        if num in num_set:
            return True
        else:
            num_set.add(num)
    
    return False
=============================================================================
def moveZeroes(nums):
    n = len(nums)
    left = right = 0
    
    while right < n:
        if nums[right] != 0:
            nums[left], nums[right] = nums[right], nums[left]
            left += 1
        right += 1
==============================================================================
def findErNums(nums):
    num_set = set()
    duplicate = -1
    missing = -1
    
    for num in nums:
        if num in num_set:
            duplicate = num
        else:
            num_set.add(num)
    
    for num in range(1, len(nums) + 1):
        if num not in num_set:
            missing = num
            break
    
    return [duplicate, missing]


